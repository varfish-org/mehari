name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  Formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt

      - name: Install flatbuffers
        uses: ./.github/actions/install-flatbuffers

      - name: Check format
        run: |
          flatc -o target/flatbuffers --rust src/world.fbs
          rustfmt target/flatbuffers/world_generated.rs
          cargo fmt -- --check

  Linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy

      - name: Install flatbuffers
        uses: ./.github/actions/install-flatbuffers

      # - uses: Swatinem/rust-cache@v1.3.0
      # Enable caching of the 'librocksdb-sys' crate by additionally caching the
      # 'librocksdb-sys' src directory which is managed by cargo
      - uses: bmwill/rust-cache@v1 # Fork of 'Swatinem/rust-cache' which allows caching additional paths
        with:
          path: ~/.cargo/registry/src/**/librocksdb-sys-*

      - name: Lint with clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  Testing:
    needs: Formatting
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - label: fast
          - label: full

    services:
      # The tests need a postgres server;  the data will be loaded later
      # after checkout.
      postgres:
        image: postgres
        env:
          POSTGRES_DB: uta
          POSTGRES_USER: uta_admin
          POSTGRES_PASSWORD: uta_admin
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: 'true'

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install flatbuffers
        uses: ./.github/actions/install-flatbuffers

      # - uses: Swatinem/rust-cache@v1.3.0
      # Enable caching of the 'librocksdb-sys' crate by additionally caching the
      # 'librocksdb-sys' src directory which is managed by cargo
      - uses: bmwill/rust-cache@v1 # Fork of 'Swatinem/rust-cache' which allows caching additional paths
        with:
          path: ~/.cargo/registry/src/**/librocksdb-sys-*

      - name: Run cargo-tarpaulin with fast tests
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: 0.21.0
          args: "-- --test-threads 1"
        if: ${{ matrix.label == 'fast' }}

      - name: Run cargo-tarpaulin with full tests
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: 0.21.0
          args: "--release --timeout=180 -- --include-ignored"
        if: ${{ matrix.label == 'full' }}

      - name: Codecov submission of fast test results
        uses: codecov/codecov-action@v3
        with:
          verbose: true
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
        if: ${{ matrix.label == 'fast' }}
